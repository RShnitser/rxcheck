// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: quizzes.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createQuiz = `-- name: CreateQuiz :one
INSERT INTO quizzes (id, user_id, question_1, question_2, question_3, question_4, question_5, score)
VALUES (
    gen_random_uuid(),
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    0
)
RETURNING id, user_id, question_1, question_2, question_3, question_4, question_5, score
`

type CreateQuizParams struct {
	UserID    uuid.UUID
	Question1 uuid.UUID
	Question2 uuid.UUID
	Question3 uuid.UUID
	Question4 uuid.UUID
	Question5 uuid.UUID
}

func (q *Queries) CreateQuiz(ctx context.Context, arg CreateQuizParams) (Quiz, error) {
	row := q.db.QueryRowContext(ctx, createQuiz,
		arg.UserID,
		arg.Question1,
		arg.Question2,
		arg.Question3,
		arg.Question4,
		arg.Question5,
	)
	var i Quiz
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Question1,
		&i.Question2,
		&i.Question3,
		&i.Question4,
		&i.Question5,
		&i.Score,
	)
	return i, err
}

const deleteQuiz = `-- name: DeleteQuiz :exec
DELETE FROM quizzes WHERE user_id = $1
`

func (q *Queries) DeleteQuiz(ctx context.Context, userID uuid.UUID) error {
	_, err := q.db.ExecContext(ctx, deleteQuiz, userID)
	return err
}

const getQuizByUserID = `-- name: GetQuizByUserID :one
SELECT id, user_id, question_1, question_2, question_3, question_4, question_5, score FROM quizzes
WHERE user_id = $1
`

func (q *Queries) GetQuizByUserID(ctx context.Context, userID uuid.UUID) (Quiz, error) {
	row := q.db.QueryRowContext(ctx, getQuizByUserID, userID)
	var i Quiz
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Question1,
		&i.Question2,
		&i.Question3,
		&i.Question4,
		&i.Question5,
		&i.Score,
	)
	return i, err
}

const updateQuizScore = `-- name: UpdateQuizScore :exec
UPDATE quizzes SET score = $2
WHERE id = $1
`

type UpdateQuizScoreParams struct {
	ID    uuid.UUID
	Score int32
}

func (q *Queries) UpdateQuizScore(ctx context.Context, arg UpdateQuizScoreParams) error {
	_, err := q.db.ExecContext(ctx, updateQuizScore, arg.ID, arg.Score)
	return err
}
